name: Deploy to Home Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: 🏠 Deploy to Home Server
    runs-on: ubuntu-latest
    
    steps:
      - name: 🚚 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"

      - name: 📦 Install dependencies
        run: npm install

      - name: 🔨 Build project
        run: npm run build:homeserver

      - name: ☁️ Setup Cloudflare
        run: |
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      - name: 🔑 Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.HOME_SERVER_SSH_KEY }}

      - name: 🔐 Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "Host ssh.leoproti.com.br" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  UserKnownHostsFile /dev/null" >> ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: 🔧 Test SSH connection
        run: |
          echo "Testing SSH connection..."
          ssh -o ProxyCommand="cloudflared access ssh --hostname %h" \
              -o ConnectTimeout=10 \
              leonardovieiraxy@ssh.leoproti.com.br "echo 'SSH connection successful!'"

      - name: 📁 Prepare files
        run: |
          mkdir -p leo-portifolio
          cp docker-compose.yml leo-portifolio/
          cp nginx.conf leo-portifolio/
          cp Dockerfile leo-portifolio/
          cp -r dist leo-portifolio/dist

      - name: � Configure Cloudflare credentials
        run: |
          mkdir -p ~/.cloudflared
          echo "${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }}" > ~/.cloudflared/cert.pem
          chmod 600 ~/.cloudflared/cert.pem

      - name: 📤 Transfer files
        run: |
          scp -o ProxyCommand="cloudflared access ssh --hostname %h" \
              -r leo-portifolio leonardovieiraxy@ssh.leoproti.com.br:/home/leonardovieiraxy/projetos/

      - name: 🚀 Deploy on server
        run: |
          ssh -o ProxyCommand="cloudflared access ssh --hostname %h" \
              leonardovieiraxy@ssh.leoproti.com.br << 'EOF'
            # Criar pasta projetos se não existir
            mkdir -p /home/leonardovieiraxy/projetos
            cd /home/leonardovieiraxy/projetos/leo-portifolio
            
            # Debug: verificar arquivos
            echo "=== Arquivos na pasta ==="
            ls -la
            
            # Limpar tudo relacionado ao projeto
            echo "=== Limpando containers e imagens antigas ==="
            docker compose down --remove-orphans || true
            docker container prune -f
            docker image rm leo-portifolio_portfolio || true
            docker image prune -f
            
            # Build e start com logs detalhados
            echo "=== Fazendo build ==="
            docker compose build --no-cache --pull
            
            echo "=== Iniciando containers ==="
            docker compose up -d
            
            # Verificar status
            echo "=== Status dos containers ==="
            docker compose ps
            
            # Mostrar logs se houver erro
            echo "=== Logs dos containers ==="
            docker compose logs
            
            # Limpeza
            docker system prune -f
          EOF
