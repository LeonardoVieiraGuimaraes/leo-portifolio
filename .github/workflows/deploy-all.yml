name: Deploy to All Platforms

on:
  workflow_dispatch:  # Apenas manual

jobs:
  # Job 1: Build and Deploy to GitHub Pages
  deploy-github:
    name: üìö GitHub Pages
    runs-on: ubuntu-latest
    
    steps:
      - name: üöö Get latest code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"

      - name: Install Dependencies
        run: npm install

      - name: Build for GitHub Pages
        run: npm run build:github
        env:
          DEPLOY_TARGET: github

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist

  # Job 2: Build and Deploy to Home Server (executa em paralelo)
  deploy-homeserver:
    name: üè† Home Server
    runs-on: ubuntu-latest
    
    steps:
      - name: üöö Get latest code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"

      - name: Install Dependencies
        run: npm install

      - name: Build for Home Server
        run: npm run build:homeserver
        env:
          DEPLOY_TARGET: homeserver

      - name: Setup Cloudflare
        run: |
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.HOME_SERVER_SSH_KEY }}

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "Host ssh.leoproti.com.br" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  UserKnownHostsFile /dev/null" >> ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: Prepare deployment files
        run: |
          mkdir -p leo-portifolio
          cp docker-compose.yml leo-portifolio/
          cp nginx.conf leo-portifolio/
          cp -r dist leo-portifolio/dist

      - name: Transfer files via Cloudflare Tunnel
        run: |
          echo "${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }}" | cloudflared tunnel login
          scp -o ProxyCommand="cloudflared access ssh --hostname %h" \
              -r leo-portifolio leonardovieiraxy@ssh.leoproti.com.br:/home/leonardovieiraxy/

      - name: Deploy on Home Server
        run: |
          ssh -o ProxyCommand="cloudflared access ssh --hostname %h" \
              leonardovieiraxy@ssh.leoproti.com.br << 'EOF'
            cd /home/leonardovieiraxy/leo-portifolio
            docker compose down
            docker compose up -d --build
            docker system prune -f
          EOF

  # Job 3: Status Summary
  notify-completion:
    name: üì¢ Deploy Status
    runs-on: ubuntu-latest
    needs: [deploy-github, deploy-homeserver]
    if: always()
    
    steps:
      - name: üìä Deployment Summary
        run: |
          echo "## üéâ Deploy Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Platform | Status | URL |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------|-----|" >> $GITHUB_STEP_SUMMARY
          echo "| üìö GitHub Pages | ${{ needs.deploy-github.result }} | https://leonardovieiraxy.github.io/leo_portifolio/ |" >> $GITHUB_STEP_SUMMARY
          echo "| üè† Home Server | ${{ needs.deploy-homeserver.result }} | https://leoproti.com.br |" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.deploy-github.result }}" == "success" ] && [ "${{ needs.deploy-homeserver.result }}" == "success" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "‚úÖ **All deployments successful!**" >> $GITHUB_STEP_SUMMARY
            echo "‚úÖ All deployments successful!"
          else
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "‚ùå **Some deployments failed**" >> $GITHUB_STEP_SUMMARY
            echo "‚ùå Some deployments failed"
            exit 1
          fi
